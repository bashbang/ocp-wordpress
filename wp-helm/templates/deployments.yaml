---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.appName }}
  namespace: "{{ .Values.namespace }}"
  annotations:
    {{ .Values.deploymentAnnotations }}

spec:
  replicas: {{ .Values.wordpress.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app: {{ .Values.appName }}
    spec:
      volumes:
        - name: wordpress
          emptyDir: {}
        - name: {{ .Values.appName }}-fastcgi-cache
          persistentVolumeClaim:
            claimName: {{ .Values.appName }}-fastcgi-cache
        - name: nginx-logs
          emptyDir: {}
        - name: bitnami-wordpress
          emptyDir: {}
      containers:
        - name: {{ .Values.appName }}
          image: {{ .Values.wordpress.imageRegistry }}/{{ .Values.wordpress.imageNamespace }}/{{ .Values.appName }}:{{ .Values.wordpress.imageVersion }}
          ports:
            - containerPort: {{ .Values.wordpress.service.port }}
              protocol: TCP
          resources:
            requests:
              cpu: {{ .Values.wordpress.resources.requests.cpu }}
              memory: {{ .Values.wordpress.resources.requests.memory }}
            limits:
              cpu: {{ .Values.wordpress.resources.limits.cpu }}
              memory: {{ .Values.wordpress.resources.limits.memory }}
          volumeMounts:
            - name: wordpress
              mountPath: /bitnami/wordpress
            - name: {{ .Values.appName }}-fastcgi-cache
              mountPath: /mnt/{{ .Values.appName }}-fastcgi-cache
            - name: nginx-logs
              mountPath: /opt/bitnami/nginx/logs
            - name: bitnami-wordpress
              mountPath: /bitnami/wordpress-nginx
          env:
            - name: WORDPRESS_EXTRA_WP_CONFIG_CONTENT
              value: |
                define( 'WP_DEBUG', true );
                define( 'WP_DEBUG_LOG', '/dev/stdout' );
                define('WP_CACHE', true); // Added by W3 Total Cache
                $$_SERVER['HTTPS'] = 'on';
                $$_SERVER['SERVER_PORT'] = 443;
            - name: COMPOSER_AUTH
              valueFrom:
                secretKeyRef:
                  name: composer-auth
                  key: auth.json
          envFrom:
            - secretRef:
                name: {{ .Values.appName }}
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /wp-json/rapunzel/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /wp-json/rapunzel/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 15
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccount: {{ .Values.serviceAccountName }}
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
...
